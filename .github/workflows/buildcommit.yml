name: build and commit

on:
  push:
    branches: [ master, dev ]

  workflow_dispatch:

jobs:

  build-linux-gnu:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        name: [AMD64, i386, arm]
        platformflags: [""]
        platformtools: [""]
        emulator: [""]
        include:
          - name: i386
            platformflags: -m32
          - name: arm
            platformtools:  arm-linux-gnueabi
            emulator: qemu-arm
    name: build-linux-gnu (${{matrix.name}})
    env:
      PLATFORMFLAGS: ${{matrix.platformflags}}
      PLATFORM_PREFIX: ${{matrix.platformtools}}-
      EMULATOR: ${{matrix.emulator}}
    steps:
    - uses: actions/checkout@v2
    - name: install multilib
      run: sudo apt-get install --no-install-recommends -y gcc-multilib g++-multilib 
      if: ${{ matrix.name == 'i386' }}
    - name: install qemu
      if: matrix.emulator
      run: sudo apt-get install --no-install-recommends -y qemu-user 
    - name: install abi lib
      if: matrix.platformtools
      run: sudo apt-get install --no-install-recommends -y gcc-${{matrix.platformtools}} g++-${{matrix.platformtools}} 
    - name: make
      run: make all
    - name: test
      run: make test
    - name: set abi name
      run: echo abiname=$(make abiname) >> $GITHUB_ENV
    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.abiname }}
        path: lib/${{ env.abiname }}/libstackman.a
      
  build-linux-arm:
    if: 0
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
       include:
        - arch: arm
          emulator: qemu-arm
          abi: arm-linux-gnueabi
        - arch: aarch64
          emulator: qemu-aarch64
          abi: aarch64-linux-gnu
    name: test-linux-arm (${{matrix.arch}})
    env:
      PLATFORM_PREFIX: ${{matrix.abi}}-
      EMULATOR: ${{matrix.emulator}}
    steps:
    - uses: actions/checkout@v2
    - name: install qemu
      run: sudo apt-get install --no-install-recommends -y qemu-user 
    - name: install abi lib
      run: sudo apt-get install --no-install-recommends -y gcc-${{matrix.abi}} g++-${{matrix.abi}} 
    - name: make 
      run: make all
    - name: test
      run: make test
    - name: Commit libraries
      run: |
          git config --global user.name 'Build Runner'
          git config --global user.email 'buildrunner@users.noreply.github.com'
          git add lib/*.a
          git diff-index --quiet HEAD || git commit -m "Automated build"
          git push
      
  build-windows:
    if: 0
    runs-on: windows-2019
    strategy:
      fail-fast: true
      matrix:
        platform: [x86, x64, ARM, ARM64]
        include:
          - platform: x86
            folder: Win32
            native: yes
          - platform: x64
            folder: x64
            native: yes
    steps:
      - uses: actions/checkout@v2
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
      - name: build
        run: msbuild.exe vs2019\stackman.sln /p:Platform=${{matrix.platform}}
      - name: test
        if: ${{ matrix.native == 'yes' }}
        run: vs2019\${{matrix.folder}}\Debug\test.exe
      - name: Commit libraries
        run: |
          git config --global user.name 'Build Runner'
          git config --global user.email 'buildrunner@users.noreply.github.com'
          git add lib/*.lib
          git diff-index --quiet HEAD || git commit -m "Automated build"
          git push

